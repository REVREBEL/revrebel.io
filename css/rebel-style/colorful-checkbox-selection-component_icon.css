



<script>
    function toggleCheckboxImage(checkboxId) {
        var checkbox = document.getElementById(checkboxId);
        var icon = checkbox.parentElement.querySelector('.checkbox-icon_icon');
        var isActive = checkbox.checked;
        
        icon.src = imageUrl;
    }
</script>

<div role="listitem" class="post_categories w-dyn-item">
    <div role="group" aria-label="travel trends topics" class="fs-checkbox_row-2">
        <label fs-cmsfilter-active="is-active" class="w-checkbox checkbox-icon_container">
            <img id="icon-0" loading="lazy" alt="" src="https://assets-global.website-files.com/62b96292810100074056fead/66048fe6de4930960fc06472_safety-filled-color.png" class="checkbox-icon_icon">
            <div class="w-checkbox-input w-checkbox-input--inputType-custom checkbox-icon_blue">
                <br>
            </div>
            <input type="checkbox" onchange="toggleCheckboxImage('icon-0');" style="opacity:0;position:absolute;z-index:-1" id="checkbox-0">
            <span fs-cmsfilter-active="is-selected" fs-cmsfilter-field="topic" class="checkbox-icon_label w-form-label">Safety</span>
        </label>
    </div>
</div>


{{wf {&quot;path&quot;:&quot;icon-filled&quot;,&quot;type&quot;:&quot;ImageRef&quot;\} }}


{{wf {&quot;path&quot;:&quot;icon-outline-svg-2&quot;,&quot;type&quot;:&quot;ImageRef&quot;\} }}



(function() {
  // Your custom code goes here
  function toggleCheckboxImage(checkboxId) {
      var checkbox = document.getElementById(checkboxId);
      var icon = checkbox.parentElement.querySelector('.checkbox-icon_icon');
      var isActive = checkbox.checked;
      var imageUrl = isActive ? {{wf {&quot;path&quot;:&quot;icon-filled&quot;,&quot;type&quot;:&quot;ImageRef&quot;\} }} : {{wf {&quot;path&quot;:&quot;icon-outline-svg-2&quot;,&quot;type&quot;:&quot;ImageRef&quot;\} }};
      icon.src = imageUrl;
  }

  // Call initialization function
  function initCustomFunctionality() {
      // Add event listeners or any other initialization logic here
      document.querySelectorAll('input[type="checkbox"]').forEach(function(checkbox) {
          checkbox.addEventListener('change', function() {
              toggleCheckboxImage(this.id);
          });
      });
  }

  // Initialize your custom functionality when the DOM is ready
  document.addEventListener('DOMContentLoaded', function() {
      initCustomFunctionality();
  });
})();





function generateUniqueIDs() {
  // Get all collection items
  var collectionItems = document.querySelectorAll('.collection-item');

  // Loop through each collection item
  collectionItems.forEach(function(item) {
      var containerID = item.dataset.containerid;
      var checkboxID = item.dataset.checkboxid;
      var slug = item.dataset.slug;

      // Check if containerID is empty
      if (!containerID) {
          // Generate unique containerID
          var currentDate = new Date();
          var formattedDate = ('0' + (currentDate.getMonth() + 1)).slice(-2) + currentDate.getDate() + currentDate.getFullYear().toString().substr(-2);
          var generatedContainerID = 'containID-' + formattedDate + '-' + slug;

          // Write generatedContainerID back to the collection field
          item.dataset.containerid = generatedContainerID;
          // You can also write this value back to your Webflow CMS using the Webflow API if needed
      }

      // Check if checkboxID is empty
      if (!checkboxID) {
          // Generate unique checkboxID
          var currentDate = new Date();
          var formattedDate = ('0' + (currentDate.getMonth() + 1)).slice(-2) + currentDate.getDate() + currentDate.getFullYear().toString().substr(-2);
          var generatedCheckboxID = formattedDate + '-checkboxID-' + slug;

          // Write generatedCheckboxID back to the collection field
          item.dataset.checkboxid = generatedCheckboxID;
          // You can also write this value back to your Webflow CMS using the Webflow API if needed
      }
  });
}


document.addEventListener('DOMContentLoaded', function() {
  generateUniqueIDs();
});



/**
 * Function to generate unique IDs based on the slug.
 * @param {string} slug - The slug of the collection item.
 * @returns {Object} An object containing the generated containerID and checkboxID.
 */
 function generateUniqueIDs(slug) {
  var currentDate = new Date();
  var formattedDate = ('0' + (currentDate.getMonth() + 1)).slice(-2) + currentDate.getDate() + currentDate.getFullYear().toString().substr(-2);
  var containerID = 'containID-' + formattedDate + '-' + slug;
  var checkboxID = formattedDate + '-checkboxID-' + slug;
  return { containerID: containerID, checkboxID: checkboxID };
}

/**
* Function to fetch collection items and update fields.
*/
function updateCollectionFields() {
  // Constants for Webflow Site ID and Collection ID
  const SITE_ID = 'YOUR_SITE_ID';
  const COLLECTION_ID = 'YOUR_COLLECTION_ID';

  // Initialize Webflow API
  var Webflow = window.Webflow || [];

  // Fetch collection items using Webflow API
  Webflow.push(function() {
      var endpoint = '/collections/' + COLLECTION_ID + '/items';

      // Fetch collection items
      Webflow.Editor.get(endpoint, {}, function(response) {
          if (response && response.items) {
              response.items.forEach(function(item) {
                  var slug = item.slug;
                  var containerID = item.containerID;
                  var checkboxID = item.checkboxID;

                  // Check if containerID is empty
                  if (!containerID) {
                      // Generate unique containerID
                      var generatedIDs = generateUniqueIDs(slug);
                      containerID = generatedIDs.containerID;
                  }

                  // Check if checkboxID is empty
                  if (!checkboxID) {
                      // Generate unique checkboxID
                      var generatedIDs = generateUniqueIDs(slug);
                      checkboxID = generatedIDs.checkboxID;
                  }

                  // Update the item with the new containerID and checkboxID
                  item.containerID = containerID;
                  item.checkboxID = checkboxID;
              });

              // Save the updated collection items using Webflow API
              Webflow.Editor.save(endpoint, { items: response.items }, function() {
                  console.log('Collection fields updated successfully.');
              });
          }
      });
  });
}

// Call the function to update collection fields when the DOM is ready
document.addEventListener('DOMContentLoaded', function() {
  updateCollectionFields();
});
